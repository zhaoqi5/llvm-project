# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc --mtriple=loongarch64 -run-pass=legalizer %s -o - \
# RUN: | FileCheck %s
---
name:            lshr_i8
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: lshr_i8
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $r4
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $r5
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 255
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s64) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 255
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(s64) = G_AND [[COPY]], [[C1]]
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s64) = G_LSHR [[AND1]], [[AND]](s64)
    ; CHECK-NEXT: $r4 = COPY [[LSHR]](s64)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(s64) = COPY $r4
    %1:_(s64) = COPY $r5
    %2:_(s8) = G_TRUNC %0(s64)
    %3:_(s8) = G_TRUNC %1(s64)
    %4:_(s8) = G_LSHR %2, %3
    %5:_(s64) = G_ANYEXT %4(s8)
    $r4 = COPY %5(s64)
    PseudoRET implicit $r4

...
---
name:            lshr_i15
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: lshr_i15
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $r4
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $r5
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 32767
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s64) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 32767
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(s64) = G_AND [[COPY]], [[C1]]
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s64) = G_LSHR [[AND1]], [[AND]](s64)
    ; CHECK-NEXT: $r4 = COPY [[LSHR]](s64)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(s64) = COPY $r4
    %1:_(s64) = COPY $r5
    %2:_(s15) = G_TRUNC %0(s64)
    %3:_(s15) = G_TRUNC %1(s64)
    %4:_(s15) = G_LSHR %2, %3
    %5:_(s64) = G_ANYEXT %4(s15)
    $r4 = COPY %5(s64)
    PseudoRET implicit $r4

...
---
name:            lshr_i16
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: lshr_i16
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $r4
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $r5
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 65535
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s64) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 65535
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(s64) = G_AND [[COPY]], [[C1]]
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s64) = G_LSHR [[AND1]], [[AND]](s64)
    ; CHECK-NEXT: $r4 = COPY [[LSHR]](s64)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(s64) = COPY $r4
    %1:_(s64) = COPY $r5
    %2:_(s16) = G_TRUNC %0(s64)
    %3:_(s16) = G_TRUNC %1(s64)
    %4:_(s16) = G_LSHR %2, %3
    %5:_(s64) = G_ANYEXT %4(s16)
    $r4 = COPY %5(s64)
    PseudoRET implicit $r4

...
---
name:            lshr_i32
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: lshr_i32
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $r4
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $r5
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s64) = G_CONSTANT i64 4294967295
    ; CHECK-NEXT: [[AND:%[0-9]+]]:_(s64) = G_AND [[COPY1]], [[C]]
    ; CHECK-NEXT: [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 4294967295
    ; CHECK-NEXT: [[AND1:%[0-9]+]]:_(s64) = G_AND [[COPY]], [[C1]]
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s64) = G_LSHR [[AND1]], [[AND]](s64)
    ; CHECK-NEXT: $r4 = COPY [[LSHR]](s64)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(s64) = COPY $r4
    %1:_(s64) = COPY $r5
    %2:_(s32) = G_TRUNC %0(s64)
    %3:_(s32) = G_TRUNC %1(s64)
    %4:_(s32) = G_LSHR %2, %3
    %5:_(s64) = G_ANYEXT %4(s32)
    $r4 = COPY %5(s64)
    PseudoRET implicit $r4

...
---
name:            lshr_i64
body:             |
  bb.0.entry:
    ; CHECK-LABEL: name: lshr_i64
    ; CHECK: [[COPY:%[0-9]+]]:_(s64) = COPY $r4
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:_(s64) = COPY $r5
    ; CHECK-NEXT: [[LSHR:%[0-9]+]]:_(s64) = G_LSHR [[COPY]], [[COPY1]](s64)
    ; CHECK-NEXT: $r4 = COPY [[LSHR]](s64)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(s64) = COPY $r4
    %1:_(s64) = COPY $r5
    %2:_(s64) = G_LSHR %0, %1
    $r4 = COPY %2(s64)
    PseudoRET implicit $r4

...
