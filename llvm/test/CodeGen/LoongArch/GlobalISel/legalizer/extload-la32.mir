# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc --mtriple=loongarch32 -run-pass=legalizer %s -o - \
# RUN: | FileCheck %s

---
name:            zextload_i8_i16
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: zextload_i8_i16
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(s32) = G_ZEXTLOAD [[COPY]](p0) :: (load (s8))
    ; CHECK-NEXT: $r4 = COPY [[ZEXTLOAD]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(p0) = COPY $r4
    %2:_(s16) = G_ZEXTLOAD %0(p0) :: (load (s8))
    %3:_(s32) = G_ANYEXT %2(s16)
    $r4 = COPY %3(s32)
    PseudoRET implicit $r4

...
---
name:            zextload_i8_i32
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: zextload_i8_i32
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(s32) = G_ZEXTLOAD [[COPY]](p0) :: (load (s8))
    ; CHECK-NEXT: $r4 = COPY [[ZEXTLOAD]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(p0) = COPY $r4
    %2:_(s32) = G_ZEXTLOAD %0(p0) :: (load (s8))
    $r4 = COPY %2(s32)
    PseudoRET implicit $r4

...
---
name:            zextload_i16_i32
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: zextload_i16_i32
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(s32) = G_ZEXTLOAD [[COPY]](p0) :: (load (s16))
    ; CHECK-NEXT: $r4 = COPY [[ZEXTLOAD]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(p0) = COPY $r4
    %2:_(s32) = G_ZEXTLOAD %0(p0) :: (load (s16))
    $r4 = COPY %2(s32)
    PseudoRET implicit $r4

...
---
name:            zextload_i8_i64
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: zextload_i8_i64
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(s32) = G_ZEXTLOAD [[COPY]](p0) :: (load (s8))
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: $r4 = COPY [[ZEXTLOAD]](s32)
    ; CHECK-NEXT: $r5 = COPY [[C]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4, implicit $r5
    %0:_(p0) = COPY $r4
    %2:_(s64) = G_ZEXTLOAD %0(p0) :: (load (s8))
    %3:_(s32), %4:_(s32) = G_UNMERGE_VALUES %2(s64)
    $r4 = COPY %3(s32)
    $r5 = COPY %4(s32)
    PseudoRET implicit $r4, implicit $r5

...
---
name:            zextload_i16_i64
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: zextload_i16_i64
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[ZEXTLOAD:%[0-9]+]]:_(s32) = G_ZEXTLOAD [[COPY]](p0) :: (load (s16))
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: $r4 = COPY [[ZEXTLOAD]](s32)
    ; CHECK-NEXT: $r5 = COPY [[C]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4, implicit $r5
    %0:_(p0) = COPY $r4
    %2:_(s64) = G_ZEXTLOAD %0(p0) :: (load (s16))
    %3:_(s32), %4:_(s32) = G_UNMERGE_VALUES %2(s64)
    $r4 = COPY %3(s32)
    $r5 = COPY %4(s32)
    PseudoRET implicit $r4, implicit $r5

...
---
name:            zextload_i32_i64
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: zextload_i32_i64
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p0) :: (load (s32))
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
    ; CHECK-NEXT: $r4 = COPY [[LOAD]](s32)
    ; CHECK-NEXT: $r5 = COPY [[C]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4, implicit $r5
    %0:_(p0) = COPY $r4
    %2:_(s64) = G_ZEXTLOAD %0(p0) :: (load (s32))
    %3:_(s32), %4:_(s32) = G_UNMERGE_VALUES %2(s64)
    $r4 = COPY %3(s32)
    $r5 = COPY %4(s32)
    PseudoRET implicit $r4, implicit $r5

...
---
name:            sextload_i8_i16
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: sextload_i8_i16
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[SEXTLOAD:%[0-9]+]]:_(s32) = G_SEXTLOAD [[COPY]](p0) :: (load (s8))
    ; CHECK-NEXT: $r4 = COPY [[SEXTLOAD]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(p0) = COPY $r4
    %2:_(s16) = G_SEXTLOAD %0(p0) :: (load (s8))
    %3:_(s32) = G_ANYEXT %2(s16)
    $r4 = COPY %3(s32)
    PseudoRET implicit $r4

...
---
name:            sextload_i8_i32
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: sextload_i8_i32
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[SEXTLOAD:%[0-9]+]]:_(s32) = G_SEXTLOAD [[COPY]](p0) :: (load (s8))
    ; CHECK-NEXT: $r4 = COPY [[SEXTLOAD]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(p0) = COPY $r4
    %2:_(s32) = G_SEXTLOAD %0(p0) :: (load (s8))
    $r4 = COPY %2(s32)
    PseudoRET implicit $r4

...
---
name:            sextload_i16_i32
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: sextload_i16_i32
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[SEXTLOAD:%[0-9]+]]:_(s32) = G_SEXTLOAD [[COPY]](p0) :: (load (s16))
    ; CHECK-NEXT: $r4 = COPY [[SEXTLOAD]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4
    %0:_(p0) = COPY $r4
    %2:_(s32) = G_SEXTLOAD %0(p0) :: (load (s16))
    $r4 = COPY %2(s32)
    PseudoRET implicit $r4

...
---
name:            sextload_i8_i64
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: sextload_i8_i64
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[SEXTLOAD:%[0-9]+]]:_(s32) = G_SEXTLOAD [[COPY]](p0) :: (load (s8))
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXTLOAD]], [[C]](s32)
    ; CHECK-NEXT: $r4 = COPY [[SEXTLOAD]](s32)
    ; CHECK-NEXT: $r5 = COPY [[ASHR]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4, implicit $r5
    %0:_(p0) = COPY $r4
    %2:_(s64) = G_SEXTLOAD %0(p0) :: (load (s8))
    %3:_(s32), %4:_(s32) = G_UNMERGE_VALUES %2(s64)
    $r4 = COPY %3(s32)
    $r5 = COPY %4(s32)
    PseudoRET implicit $r4, implicit $r5

...
---
name:            sextload_i16_i64
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: sextload_i16_i64
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[SEXTLOAD:%[0-9]+]]:_(s32) = G_SEXTLOAD [[COPY]](p0) :: (load (s16))
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[SEXTLOAD]], [[C]](s32)
    ; CHECK-NEXT: $r4 = COPY [[SEXTLOAD]](s32)
    ; CHECK-NEXT: $r5 = COPY [[ASHR]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4, implicit $r5
    %0:_(p0) = COPY $r4
    %2:_(s64) = G_SEXTLOAD %0(p0) :: (load (s16))
    %3:_(s32), %4:_(s32) = G_UNMERGE_VALUES %2(s64)
    $r4 = COPY %3(s32)
    $r5 = COPY %4(s32)
    PseudoRET implicit $r4, implicit $r5

...
---
name:            sextload_i32_i64
body:             |
  bb.0:
    liveins: $r4

    ; CHECK-LABEL: name: sextload_i32_i64
    ; CHECK: liveins: $r4
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:_(p0) = COPY $r4
    ; CHECK-NEXT: [[LOAD:%[0-9]+]]:_(s32) = G_LOAD [[COPY]](p0) :: (load (s32))
    ; CHECK-NEXT: [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 31
    ; CHECK-NEXT: [[ASHR:%[0-9]+]]:_(s32) = G_ASHR [[LOAD]], [[C]](s32)
    ; CHECK-NEXT: $r4 = COPY [[LOAD]](s32)
    ; CHECK-NEXT: $r5 = COPY [[ASHR]](s32)
    ; CHECK-NEXT: PseudoRET implicit $r4, implicit $r5
    %0:_(p0) = COPY $r4
    %2:_(s64) = G_SEXTLOAD %0(p0) :: (load (s32))
    %3:_(s32), %4:_(s32) = G_UNMERGE_VALUES %2(s64)
    $r4 = COPY %3(s32)
    $r5 = COPY %4(s32)
    PseudoRET implicit $r4, implicit $r5

...
